services:
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    restart: always
    networks:
      - task_network
    volumes:
      - ./redis_data:/data
    extra_hosts:
      - "host.docker.internal:host-gateway"

  controller:
    build:
      context: ./
      dockerfile: ./controller/Dockerfile
      args:
        - BRANCH=${BRANCH:-LOCAL}
        - CLIENT_ID=${CLIENT_ID}
        - CLIENT_SECRET=${CLIENT_SECRET}
        - REDIRECT=${REDIRECT:-http://localhost:8000/admin}
    depends_on:
      - redis
      - dev_worker
      - nginx
    volumes:
      - ./generated_seeds/:/app/controller/generated_seeds/
      - ./current_total.cfg:/app/controller/current_total.cfg
      - ./last_generated_time.cfg:/app/controller/last_generated_time.cfg
      - ./local_presets.json:/app/controller/local_presets.json
      - ./api_keys.cfg:/app/controller/api_keys.cfg
    networks:
      - task_network
    restart: always
    environment:
      - WORKER_URL_DEV=http://dev_worker:8000
      - WORKER_URL_MASTER=http://master_worker:8000
      - BRANCH=${BRANCH:-LOCAL}
    deploy:
      replicas: ${CONTROLLER_REPLICAS:-1}
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
    extra_hosts:
      - "host.docker.internal:host-gateway"

  randobot:
    build:
      context: ./
      dockerfile: ./racetime_bot/Dockerfile
      args:
        - BRANCH=${BRANCH:-LOCAL}
        - CATEGORY_SLUG=${CATEGORY_SLUG}
        - RGG_CLIENT_ID=${RGG_CLIENT_ID}
        - RGG_CLIENT_SECRET=${RGG_CLIENT_SECRET}
        - DISCORD_WEBHOOK=${DISCORD_WEBHOOK}
        - API_KEY=${API_KEY}
    depends_on:
      - controller
    restart: always
    environment:
      - BRANCH=${BRANCH:-LOCAL}
    deploy:
      replicas: ${RANDOBOT_REPLICAS:-1}
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
    extra_hosts:
      - "host.docker.internal:host-gateway"
    profiles:
      - racetime

  nginx:
    build:
      context: ./controller/
      dockerfile: ./nginx.Dockerfile
      args:
        - BRANCH=${BRANCH:-LOCAL}
    container_name: nginx
    ports:
      - target: 80
        published: 80
        mode: host
        host_ip: 0.0.0.0
      - target: 443
        published: 443
        mode: host
        host_ip: 0.0.0.0
    restart: always
    networks:
      - task_network
    volumes:
      - ./certificate.crt:/etc/nginx/certificate.crt
      - ./private.key:/etc/nginx/private.key
    extra_hosts:
      - "host.docker.internal:host-gateway"

  dev_worker:
    build:
      context: ./
      dockerfile: ./worker/Dockerfile
      args:
        - BRANCH=${BRANCH:-LOCAL}
    depends_on:
      - redis
    networks:
      - task_network
    environment:
      - CLIENT_ID=${CLIENT_ID}
      - CLIENT_SECRET=${CLIENT_SECRET}
      - REDIRECT=${REDIRECT:-http://localhost:8000/admin}
      - BRANCH=${BRANCH:-LOCAL}
    volumes:
      - ./dk64.z64:/app/worker/dk64.z64
      - ./generated_seeds/:/app/worker/generated_seeds/
      - ./current_total.cfg:/app/worker/current_total.cfg
      - ./last_generated_time.cfg:/app/worker/last_generated_time.cfg
    deploy:
      replicas: ${WORKER_REPLICAS:-3}
      update_config:
        parallelism: 2
        delay: 10s
        order: start-first
    restart: always
    extra_hosts:
      - "host.docker.internal:host-gateway"

  master_worker:
    build:
      context: ./
      dockerfile: ./worker/Dockerfile
      args:
        - BRANCH=${MASTER_BRANCH:-master}
    depends_on:
      - redis
    restart: always
    networks:
      - task_network
    environment:
      - CLIENT_ID=${CLIENT_ID}
      - CLIENT_SECRET=${CLIENT_SECRET}
      - REDIRECT=${REDIRECT:-http://localhost:8000/admin}
      - BRANCH=${MASTER_BRANCH:-master}
    volumes:
      - ./dk64.z64:/app/worker/dk64.z64
      - ./generated_seeds/:/app/worker/generated_seeds/
      - ./current_total.cfg:/app/worker/current_total.cfg
      - ./last_generated_time.cfg:/app/worker/last_generated_time.cfg
    deploy:
      replicas: ${MASTER_WORKER_REPLICAS:-3}
      update_config:
        parallelism: 2
        delay: 10s
        order: start-first
    profiles:
      - master
    extra_hosts:
      - "host.docker.internal:host-gateway"

networks:
  task_network:
