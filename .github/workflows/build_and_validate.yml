---
name: Build and Scan
on:
  push:
    branches: [ main, master, dev, v*.* ]
  pull_request:
    branches: [ main, master, dev, v*.* ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@v3

        - name: Setup python
          uses: actions/setup-python@v4.1.0
          with:
              python-version: 3.11.7
              architecture: x64

        - name: Install linters
          run: pip install black pycodestyle pydocstyle djlint

        - name: Run black
          run: black . --check -l 200

        - name: Run pycodestyle
          run: pycodestyle --ignore E501,W605,W503,E203,E741,E731,E402 .

        - name: Run pydocstyle
          run: pydocstyle .

  pytest:
    runs-on: ubuntu-latest
    name: Run Tests
    steps:
      - uses: actions/checkout@v3

      - name: Setup python
        uses: actions/setup-python@v4.1.0
        with:
            python-version: 3.11.7
            architecture: x64

      - name: Install packages
        run: pip install -r requirements-dev.txt

      - name: Run pytest
        run:  |
          pytest --max-failure-rate 0.5 -n 4 -v --cov --cov-report xml:coverage.xml ${GITHUB_WORKSPACE}/tests || true
          # cat the file error_status to see if there were any errors 1 if there was 0 if not
          STATUS=$(cat error_status)
          if [ "$STATUS" -eq 1 ]; then
              exit 1
          fi

      - name: Get Cover 
        uses: orgoro/coverage@v3.1
        continue-on-error: true
        with:
            coverageFile: ./coverage.xml
            token: ${{ secrets.GITHUB_TOKEN }}

      - name: Job Complete
        run: echo "Job Complete"

  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript-typescript', 'python' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        queries: security-extended,security-and-quality
        build-mode: none

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3

  cbcalc:
    name: Compute CB requirements for the CB calculator
    if: github.event_name == 'pull_request' # Only run this on PR; we don't want the scripts pushing changes directly to the main branch(es)
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v3

    - name: Setup python
      uses: actions/setup-python@v4.1.0
      with:
          python-version: 3.11.7
          architecture: x64

    - name: Run CB calculator
      run: python cb_calc.py

    - name: Check for changes
      run: |
        CHANGED_FILES=0
        git diff --quiet --exit-code || CHANGED_FILES=$?
        echo "Detected changed files: $CHANGED_FILES"
        if [ $CHANGED_FILES -eq 0 ]; then exit 0; fi # If no unstaged files, exit the script
        git config --global user.email "cb_calc@noreply.github.com"
        git config --global user.name "CB calculator"
        git commit -am "Updated CB calculator requirements on $(date)"
        git push