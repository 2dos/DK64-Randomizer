# fmt: off
"""Shufflable exit class and list file."""

from randomizer.Enums.Exits import Exits
from randomizer.Enums.ExitCategories import ExitCategories
from randomizer.Enums.Regions import Regions
from randomizer.Enums.Kongs import Kongs


class ShufflableExit:
    """Class that stores data about an exit to be shuffled."""

    def __init__(self, name, region, reverse, category=None, entryKongs={Kongs.donkey, Kongs.diddy, Kongs.lanky, Kongs.tiny, Kongs.chunky}, regionKongs={}, move=False):
        """Initialize with given parameters."""
        self.name = name
        self.region = region
        self.reverse = reverse
        self.category = category
        self.entryKongs = entryKongs  # Indicates either need to be one of a certain set of kongs to gain access to this (front)
        self.regionKongs = regionKongs  # Indicates need to be a certain kong or kongs in this area. Should only apply if the region doesn't have a tag barrel
        self.move = move  # Indicates this exit needs a kong-specific move to access, so it's even more restrictive
        # Here dest is the entrance to go to, rather than just the target region
        # Initialized as its default reverse value
        self.dest = reverse
        self.shuffled = False
        self.toBeShuffled = False


ShufflableExits = {
    # Level Exits
    Exits.IslesToJapes: ShufflableExit("DK Isles to Jungle Japes", Regions.JungleJapesLobby, Exits.JapesToIsles, ExitCategories.JapesLobby),
    Exits.JapesToIsles: ShufflableExit("Jungle Japes to DK Isles", Regions.JungleJapesMain, Exits.IslesToJapes, ExitCategories.JapesExterior),
    Exits.IslesToAztec: ShufflableExit("DK Isles to Angry Aztec", Regions.AngryAztecLobby, Exits.AztecToIsles, ExitCategories.AztecLobby),
    Exits.AztecToIsles: ShufflableExit("Angry Aztec to DK Isles", Regions.AngryAztecStart, Exits.IslesToAztec, ExitCategories.AztecExterior),
    Exits.IslesToFactory: ShufflableExit("DK Isles to Frantic Factory", Regions.FranticFactoryLobby, Exits.FactoryToIsles, ExitCategories.FactoryLobby),
    Exits.FactoryToIsles: ShufflableExit("Frantic Factory to DK Isles", Regions.FranticFactoryStart, Exits.IslesToFactory, ExitCategories.FactoryExterior),
    Exits.IslesToGalleon: ShufflableExit("DK Isles to Gloomy Galleon", Regions.GloomyGalleonLobby, Exits.GalleonToIsles, ExitCategories.GalleonLobby),
    Exits.GalleonToIsles: ShufflableExit("Gloomy Galleon to DK Isles", Regions.GloomyGalleonStart, Exits.IslesToGalleon, ExitCategories.GalleonExterior),
    Exits.IslesToForest: ShufflableExit("DK Isles to Fungi Forest", Regions.FungiForestLobby, Exits.ForestToIsles, ExitCategories.ForestLobby),
    Exits.ForestToIsles: ShufflableExit("Fungi Forest to DK Isles", Regions.FungiForestStart, Exits.IslesToForest, ExitCategories.ForestExterior),
    Exits.IslesToCaves: ShufflableExit("DK Isles to Crystal Caves", Regions.CrystalCavesLobby, Exits.CavesToIsles, ExitCategories.CavesLobby),
    Exits.CavesToIsles: ShufflableExit("Crystal Caves to DK Isles", Regions.CrystalCavesMain, Exits.IslesToCaves, ExitCategories.CavesExterior),
    Exits.IslesToCastle: ShufflableExit("DK Isles to Creepy Castle", Regions.CreepyCastleLobby, Exits.CastleToIsles, ExitCategories.CastleLobby),
    Exits.CastleToIsles: ShufflableExit("Creepy Castle to DK Isles", Regions.CreepyCastleMain, Exits.IslesToCastle, ExitCategories.CastleExterior),
    # DK Isles Exits
    Exits.IslesMainToFairy: ShufflableExit("DK Isles Main to Banana Fairy Queen", Regions.IslesMain, Exits.IslesFairyToMain, ExitCategories.IslesExterior, entryKongs={Kongs.tiny}, move=True),
    Exits.IslesFairyToMain: ShufflableExit("DK Isles Banana Fairy Queen to Main", Regions.BananaFairyRoom, Exits.IslesMainToFairy, regionKongs={Kongs.tiny}),
    Exits.IslesMainToSnideRoom: ShufflableExit("DK Isles Crocodile Isle to Snide Room", Regions.CrocodileIsleBeyondLift, Exits.IslesSnideRoomToMain, ExitCategories.IslesExterior),
    Exits.IslesSnideRoomToMain: ShufflableExit("DK Isles Snide Room to Crocodile Isle", Regions.IslesSnideRoom, Exits.IslesMainToSnideRoom),
    Exits.IslesMainToJapesLobby: ShufflableExit("DK Isles Main to Jungle Japes Lobby", Regions.IslesMain, Exits.IslesJapesLobbyToMain, ExitCategories.IslesExterior),
    Exits.IslesJapesLobbyToMain: ShufflableExit("DK Isles Jungle Japes Lobby to Main", Regions.JungleJapesLobby, Exits.IslesMainToJapesLobby, ExitCategories.JapesLobby),
    Exits.IslesMainToAztecLobby: ShufflableExit("DK Isles Main to Angry Aztec Lobby", Regions.IslesMain, Exits.IslesAztecLobbyToMain, ExitCategories.IslesExterior),
    Exits.IslesAztecLobbyToMain: ShufflableExit("DK Isles Angry Aztec Lobby to Main", Regions.AngryAztecLobby, Exits.IslesMainToAztecLobby, ExitCategories.AztecLobby),
    Exits.IslesMainToFactoryLobby: ShufflableExit("DK Isles Main to Frantic Factory Lobby", Regions.CrocodileIsleBeyondLift, Exits.IslesFactoryLobbyToMain, ExitCategories.IslesExterior),
    Exits.IslesFactoryLobbyToMain: ShufflableExit("DK Isles Frantic Factory Lobby to Main", Regions.FranticFactoryLobby, Exits.IslesMainToFactoryLobby, ExitCategories.FactoryLobby),
    Exits.IslesMainToGalleonLobby: ShufflableExit("DK Isles Main to Gloomy Galleon Lobby", Regions.IslesMain, Exits.IslesGalleonLobbyToMain, ExitCategories.IslesExterior),
    Exits.IslesGalleonLobbyToMain: ShufflableExit("DK Isles Gloomy Galleon Lobby to Main", Regions.GloomyGalleonLobby, Exits.IslesMainToGalleonLobby, ExitCategories.GalleonLobby),
    Exits.IslesMainToForestLobby: ShufflableExit("DK Isles Cabin Isle to Fungi Forest Lobby", Regions.CabinIsle, Exits.IslesForestLobbyToMain, ExitCategories.IslesExterior),
    Exits.IslesForestLobbyToMain: ShufflableExit("DK Isles Fungi Forest Lobby to Cabin Isle", Regions.FungiForestLobby, Exits.IslesMainToForestLobby, ExitCategories.ForestLobby),
    Exits.IslesMainToCavesLobby: ShufflableExit("DK Isles Main to Crystal Caves Lobby", Regions.IslesMain, Exits.IslesCavesLobbyToMain, ExitCategories.IslesExterior),
    Exits.IslesCavesLobbyToMain: ShufflableExit("DK Isles Crystal Caves Lobby to Main", Regions.CrystalCavesLobby, Exits.IslesMainToCavesLobby, ExitCategories.CavesLobby),
    Exits.IslesMainToCastleLobby: ShufflableExit("DK Isles Main to Creepy Castle Lobby", Regions.IslesMain, Exits.IslesCastleLobbyToMain, ExitCategories.IslesExterior),
    Exits.IslesCastleLobbyToMain: ShufflableExit("DK Isles Creepy Castle Lobby to Main", Regions.CreepyCastleLobby, Exits.IslesMainToCastleLobby, ExitCategories.CastleLobby),
    # Jungle Japes Exits
    Exits.JapesMainToMine: ShufflableExit("Jungle Japes Main to Mine", Regions.JungleJapesMain, Exits.JapesMineToMain, ExitCategories.JapesExterior, entryKongs={Kongs.diddy}, move=True),
    Exits.JapesMineToMain: ShufflableExit("Jungle Japes Mine to Main", Regions.Mine, Exits.JapesMainToMine, ExitCategories.JapesMine, regionKongs={Kongs.diddy}),
    Exits.JapesMainToLankyCave: ShufflableExit("Jungle Japes Main to Lanky Cave", Regions.IslesMain, Exits.JapesLankyCaveToMain, ExitCategories.JapesExterior, entryKongs={Kongs.lanky}, move=True),
    Exits.JapesLankyCaveToMain: ShufflableExit("Jungle Japes Lanky Cave to Main", Regions.JapesLankyCave, Exits.JapesMainToLankyCave, regionKongs={Kongs.lanky}),
    Exits.JapesMainToCatacomb: ShufflableExit("Jungle Japes Main to Catacomb", Regions.JungleJapesMain, Exits.JapesCatacombToMain, ExitCategories.JapesExterior, entryKongs={Kongs.chunky}),
    Exits.JapesCatacombToMain: ShufflableExit("Jungle Japes Catacomb to Main", Regions.JapesCatacomb, Exits.JapesMainToCatacomb, regionKongs={Kongs.chunky}),
    Exits.JapesMainToTinyHive: ShufflableExit("Jungle Japes Main to Tiny Hive", Regions.JapesBeyondFeatherGate, Exits.JapesTinyHiveToMain, ExitCategories.JapesExterior, entryKongs={Kongs.tiny}, move=True),
    Exits.JapesTinyHiveToMain: ShufflableExit("Jungle Japes Tiny Hive to Main", Regions.TinyHive, Exits.JapesMainToTinyHive, regionKongs={Kongs.tiny}),
    # Angry Aztec Exits
    # Exits.AztecStartToTemple: ShufflableExit("Angry Aztec Start to Temple", Regions.AngryAztecStart, Exits.AztecTempleToStart, ExitCategories.AztecExterior),
    # Exits.AztecTempleToStart: ShufflableExit("Angry Aztec Temple to Start", Regions.TempleStart, Exits.AztecStartToTemple),
    Exits.AztecMainToDonkey: ShufflableExit("Angry Aztec Main to Donkey 5DT", Regions.AngryAztecMain, Exits.AztecDonkeyToMain, ExitCategories.AztecExterior, entryKongs={Kongs.donkey}, move=True),
    Exits.AztecDonkeyToMain: ShufflableExit("Angry Aztec Donkey 5DT to Main", Regions.DonkeyTemple, Exits.AztecMainToDonkey, regionKongs={Kongs.donkey}),
    Exits.AztecMainToDiddy: ShufflableExit("Angry Aztec Main to Diddy 5DT", Regions.AngryAztecMain, Exits.AztecDiddyToMain, ExitCategories.AztecExterior, entryKongs={Kongs.diddy}, move=True),
    Exits.AztecDiddyToMain: ShufflableExit("Angry Aztec Diddy 5DT to Main", Regions.DiddyTemple, Exits.AztecMainToDiddy, regionKongs={Kongs.diddy}),
    Exits.AztecMainToLanky: ShufflableExit("Angry Aztec Main to Lanky 5DT", Regions.AngryAztecMain, Exits.AztecLankyToMain, ExitCategories.AztecExterior, entryKongs={Kongs.lanky}, move=True),
    Exits.AztecLankyToMain: ShufflableExit("Angry Aztec Lanky 5DT to Main", Regions.LankyTemple, Exits.AztecMainToLanky, regionKongs={Kongs.lanky}),
    Exits.AztecMainToTiny: ShufflableExit("Angry Aztec Main to Tiny 5DT", Regions.AngryAztecMain, Exits.AztecTinyToMain, ExitCategories.AztecExterior, entryKongs={Kongs.tiny}, move=True),
    Exits.AztecTinyToMain: ShufflableExit("Angry Aztec Tiny 5DT To Main", Regions.TinyTemple, Exits.AztecMainToTiny, regionKongs={Kongs.tiny}),
    Exits.AztecMainToChunky: ShufflableExit("Angry Aztec Main to Chunky 5DT", Regions.AngryAztecMain, Exits.AztecChunkyToMain, ExitCategories.AztecExterior, entryKongs={Kongs.chunky}, move=True),
    Exits.AztecChunkyToMain: ShufflableExit("Angry Aztec Chunky 5DT to Main", Regions.ChunkyTemple, Exits.AztecMainToChunky, regionKongs={Kongs.chunky}),
    Exits.AztecMainToRace: ShufflableExit("Angry Aztec Main to Beetle Race", Regions.AngryAztecMain, Exits.AztecRaceToMain, ExitCategories.AztecExterior, entryKongs={Kongs.tiny}, move=True),
    Exits.AztecRaceToMain: ShufflableExit("Angry Aztec Beetle Race to Main", Regions.AztecTinyRace, Exits.AztecMainToRace, regionKongs={Kongs.tiny}),
    # Exits.AztecMainToLlama: ShufflableExit("Angry Aztec Main to Llama Temple", Regions.AngryAztecMain, Exits.AztecLlamaToMain, ExitCategories.AztecExterior),
    # Exits.AztecLlamaToMain: ShufflableExit("Angry Aztec Llama Temple to Main", Regions.LlamaTemple, Exits.AztecMainToLlama),
    # Frantic Factory Exits
    Exits.FactoryRandDToRace: ShufflableExit("Frantic Factory R&D to Car Race", Regions.RandD, Exits.FactoryRaceToRandD, ExitCategories.FactoryExterior, entryKongs={Kongs.tiny}, move=True),
    Exits.FactoryRaceToRandD: ShufflableExit("Frantic Factory Car Race to R&D", Regions.FactoryTinyRace, Exits.FactoryRandDToRace, regionKongs={Kongs.tiny}),
    Exits.FactoryChunkyRoomToPower: ShufflableExit("Frantic Factory Chunky Room to Power Room", Regions.ChunkyRoomPlatform, Exits.FactoryPowerToChunkyRoom, ExitCategories.FactoryExterior, entryKongs={Kongs.donkey}),
    Exits.FactoryPowerToChunkyRoom: ShufflableExit("Frantic Factory Power Room to Chunky Room", Regions.PowerHut, Exits.FactoryChunkyRoomToPower, regionKongs={Kongs.donkey}),
    Exits.FactoryBeyondHatchToInsideCore: ShufflableExit("Frantic Factory Beyond Hatch to Inside Core", Regions.BeyondHatch, Exits.FactoryInsideCoreToBeyondHatch, ExitCategories.FactoryExterior),
    Exits.FactoryInsideCoreToBeyondHatch: ShufflableExit("Frantic Factory Inside Core to Beyond Hatch", Regions.InsideCore, Exits.FactoryBeyondHatchToInsideCore, regionKongs={Kongs.donkey, Kongs.lanky}),
    # Gloomy Galleon Exits
    Exits.GalleonLighthouseAreaToLighthouse: ShufflableExit("Gloomy Galleon Main to Lighthouse", Regions.LighthouseArea, Exits.GalleonLighthouseToLighthouseArea, ExitCategories.GalleonExterior, entryKongs={Kongs.donkey}),
    Exits.GalleonLighthouseToLighthouseArea: ShufflableExit("Gloomy Galleon Lighthouse to Main", Regions.Lighthouse, Exits.GalleonLighthouseAreaToLighthouse, regionKongs={Kongs.donkey}),
    Exits.GalleonLighthousAreaToMermaid: ShufflableExit("Gloomy Galleon Main to Mermaid Room", Regions.LighthouseArea, Exits.GalleonMermaidToLighthouseArea, ExitCategories.GalleonExterior, entryKongs={Kongs.tiny}, move=True),
    Exits.GalleonMermaidToLighthouseArea: ShufflableExit("Gloomy Galleon Mermaid Room to Main", Regions.MermaidRoom, Exits.GalleonLighthousAreaToMermaid, regionKongs={Kongs.tiny}),
    Exits.GalleonLighthouseAreaToSickBay: ShufflableExit("Gloomy Galleon Main to Sick Bay", Regions.LighthouseArea, Exits.GalleonSickBayToLighthouseArea, ExitCategories.GalleonExterior, entryKongs={Kongs.chunky}, move=True),
    Exits.GalleonSickBayToLighthouseArea: ShufflableExit("Gloomy Galleon Sick Bay to Main", Regions.SickBay, Exits.GalleonLighthouseAreaToSickBay, regionKongs={Kongs.chunky}),
    Exits.GalleonShipyardToSeal: ShufflableExit("Gloomy Galleon Main to Seal Race", Regions.Shipyard, Exits.GalleonSealToShipyard, ExitCategories.GalleonExterior, entryKongs={Kongs.donkey}, move=True),
    Exits.GalleonSealToShipyard: ShufflableExit("Gloomy Galleon Seal Race to Main", Regions.SealRace, Exits.GalleonShipyardToSeal, regionKongs={Kongs.donkey}),
    Exits.GalleonShipyardToSubmarine: ShufflableExit("Gloomy Galleon Main to Submarine", Regions.Shipyard, Exits.GalleonSubmarineToShipyard, ExitCategories.GalleonExterior, entryKongs={Kongs.tiny}, move=True),
    Exits.GalleonSubmarineToShipyard: ShufflableExit("Gloomy Galleon Submarine to Main", Regions.Submarine, Exits.GalleonShipyardToSubmarine, regionKongs={Kongs.tiny}),
    Exits.GalleonShipyardToLanky: ShufflableExit("Gloomy Galleon Main to Lanky 2DS", Regions.Shipyard, Exits.GalleonLankyToShipyard, ExitCategories.GalleonExterior, entryKongs={Kongs.lanky}),
    Exits.GalleonLankyToShipyard: ShufflableExit("Gloomy Galleon Lanky 2DS to Main", Regions.LankyShip, Exits.GalleonShipyardToLanky, regionKongs={Kongs.lanky}),
    Exits.GalleonShipyardToTiny: ShufflableExit("Gloomy Galleon Main to Tiny 2DS", Regions.Shipyard, Exits.GalleonTinyToShipyard, ExitCategories.GalleonExterior, entryKongs={Kongs.tiny}),
    Exits.GalleonTinyToShipyard: ShufflableExit("Gloomy Galleon Tiny 2DS to Main", Regions.TinyShip, Exits.GalleonShipyardToTiny, regionKongs={Kongs.tiny}),
    Exits.GalleonShipyardToBongos: ShufflableExit("Gloomy Galleon Main to Donkey 5DS", Regions.Shipyard, Exits.GalleonBongosToShipyard, ExitCategories.GalleonExterior, entryKongs={Kongs.donkey}, move=True),
    Exits.GalleonBongosToShipyard: ShufflableExit("Gloomy Galleon Donkey 5DS to Main", Regions.BongosShip, Exits.GalleonShipyardToBongos, regionKongs={Kongs.donkey}),
    Exits.GalleonShipyardToGuitar: ShufflableExit("Gloomy Galleon Main to Diddy 5DS", Regions.Shipyard, Exits.GalleonGuitarToShipyard, ExitCategories.GalleonExterior, entryKongs={Kongs.diddy}, move=True),
    Exits.GalleonGuitarToShipyard: ShufflableExit("Gloomy Galleon Diddy 5DS to Main", Regions.GuitarShip, Exits.GalleonShipyardToGuitar, regionKongs={Kongs.diddy}),
    Exits.GalleonShipyardToTrombone: ShufflableExit("Gloomy Galleon Main to Lanky 5DS", Regions.Shipyard, Exits.GalleonTromboneToShipyard, ExitCategories.GalleonExterior, entryKongs={Kongs.lanky}, move=True),
    Exits.GalleonTromboneToShipyard: ShufflableExit("Gloomy Galleon Lanky 5DS to Main", Regions.TromboneShip, Exits.GalleonShipyardToTrombone, regionKongs={Kongs.lanky}),
    Exits.GalleonShipyardToSaxophone: ShufflableExit("Gloomy Galleon Main to Tiny 5DS", Regions.Shipyard, Exits.GalleonSaxophoneToShipyard, ExitCategories.GalleonExterior, entryKongs={Kongs.tiny}, move=True),
    Exits.GalleonSaxophoneToShipyard: ShufflableExit("Gloomy Galleon Tiny 5DS to Main", Regions.SaxophoneShip, Exits.GalleonShipyardToSaxophone, regionKongs={Kongs.tiny}),
    Exits.GalleonShipyardToTriangle: ShufflableExit("Gloomy Galleon Main to Chunky 5DS", Regions.Shipyard, Exits.GalleonTriangleToShipyard, ExitCategories.GalleonExterior, entryKongs={Kongs.chunky}, move=True),
    Exits.GalleonTriangleToShipyard: ShufflableExit("Gloomy Galleon Chunky 5DS to Main", Regions.TriangleShip, Exits.GalleonShipyardToTriangle, regionKongs={Kongs.chunky}),
    Exits.GalleonTreasureToChest: ShufflableExit("Gloomy Galleon Main to Chest", Regions.TreasureRoom, Exits.GalleonChestToTreasure, ExitCategories.GalleonExterior, entryKongs={Kongs.tiny}, move=True),
    Exits.GalleonChestToTreasure: ShufflableExit("Gloomy Galleon Chest to Main", Regions.TinyChest, Exits.GalleonTreasureToChest, regionKongs={Kongs.tiny}),
    # Fungi Forest Exits
    Exits.ForestMainToLowerMushroom: ShufflableExit("Fungi Forest Main to Mushroom Lower", Regions.GiantMushroomArea, Exits.ForestLowerMushroomToMain, ExitCategories.ForestExterior),
    Exits.ForestLowerMushroomToMain: ShufflableExit("Fungi Forest Mushroom Lower to Main", Regions.MushroomLower, Exits.ForestMainToLowerMushroom, ExitCategories.ForestMushroom),
    Exits.ForestLowerExteriorToLowerMushroom: ShufflableExit("Fungi Forest Lower Exterior to Lower Mushroom", Regions.MushroomLowerExterior, Exits.ForestLowerMushroomToLowerExterior, ExitCategories.ForestExterior),
    Exits.ForestLowerMushroomToLowerExterior: ShufflableExit("Fungi Forest Lower Mushroom to Lower Exterior", Regions.MushroomLower, Exits.ForestLowerExteriorToLowerMushroom, ExitCategories.ForestMushroom),
    Exits.ForestLowerExteriorToUpperMushroom: ShufflableExit("Fungi Forest Lower Exterior to Upper Mushroom", Regions.MushroomLowerExterior, Exits.ForestUpperMushroomToLowerExterior, ExitCategories.ForestExterior),
    Exits.ForestUpperMushroomToLowerExterior: ShufflableExit("Fungi Forest Upper Mushroom to Lower Exterior", Regions.MushroomUpper, Exits.ForestLowerExteriorToUpperMushroom, ExitCategories.ForestMushroom),
    Exits.ForestUpperExteriorToUpperMushroom: ShufflableExit("Fungi Forest Upper Exterior to Upper Mushroom", Regions.MushroomUpperExterior, Exits.ForestUpperMushroomToUpperExterior, ExitCategories.ForestExterior),
    Exits.ForestUpperMushroomToUpperExterior: ShufflableExit("Fungi Forest Upper Mushroom to Upper Exterior", Regions.MushroomUpper, Exits.ForestUpperExteriorToUpperMushroom, ExitCategories.ForestMushroom),
    Exits.ForestExteriorToNight: ShufflableExit("Fungi Forest Night Exterior to Night Door", Regions.MushroomNightExterior, Exits.ForestNightToExterior, ExitCategories.ForestExterior),
    Exits.ForestNightToExterior: ShufflableExit("Fungi Forest Night Door to Night Exterior", Regions.MushroomNightDoor, Exits.ForestExteriorToNight, ExitCategories.ForestMushroom),
    Exits.ForestExteriorToChunky: ShufflableExit("Fungi Forest Upper Exterior to Chunky Room", Regions.MushroomUpperExterior, Exits.ForestChunkyToExterior, ExitCategories.ForestExterior, entryKongs={Kongs.chunky}),
    Exits.ForestChunkyToExterior: ShufflableExit("Fungi Forest Chunky Room to Upper Exterior", Regions.MushroomChunkyRoom, Exits.ForestExteriorToChunky, regionKongs={Kongs.chunky}),
    Exits.ForestExteriorToZingers: ShufflableExit("Fungi Forest Upper Exterior to Zinger Room", Regions.MushroomUpperExterior, Exits.ForestZingersToExterior, ExitCategories.ForestExterior, entryKongs={Kongs.lanky}),
    Exits.ForestZingersToExterior: ShufflableExit("Fungi Forest Zinger Room to Upper Exterior", Regions.MushroomLankyZingersRoom, Exits.ForestExteriorToZingers, regionKongs={Kongs.lanky}),
    Exits.ForestExteriorToMushrooms: ShufflableExit("Fungi Forest Upper Exterior to Mushroom Room", Regions.MushroomUpperExterior, Exits.ForestMushroomsToExterior, ExitCategories.ForestExterior, entryKongs={Kongs.lanky}),
    Exits.ForestMushroomsToExterior: ShufflableExit("Fungi Forest Mushroom Room to Upper Exterior", Regions.MushroomLankyMushroomsRoom, Exits.ForestExteriorToMushrooms, regionKongs={Kongs.lanky}),
    Exits.ForestTreeToAnthill: ShufflableExit("Fungi Forest Hollow Tree Area to Anthill", Regions.HollowTreeArea, Exits.ForestAnthillToTree, ExitCategories.ForestExterior, entryKongs={Kongs.tiny}, move=True),
    Exits.ForestAnthillToTree: ShufflableExit("Fungi Forest Anthill to Hollow Tree Area", Regions.Anthill, Exits.ForestTreeToAnthill, regionKongs={Kongs.tiny}),
    Exits.ForestMainToChunkyMill: ShufflableExit("Fungi Forest Main to Mill Chunky Door", Regions.MillArea, Exits.ForestChunkyMillToMain, ExitCategories.ForestExterior, entryKongs={Kongs.chunky}, move=True),
    Exits.ForestChunkyMillToMain: ShufflableExit("Fungi Forest Mill Chunky Door to Mill", Regions.MillChunkyArea, Exits.ForestMainToChunkyMill, ExitCategories.ForestMill, entryKongs={Kongs.chunky}, regionKongs={Kongs.chunky}),
    Exits.ForestMainToTinyMill: ShufflableExit("Fungi Forest Main to Mill Tiny Entrance", Regions.MillArea, Exits.ForestTinyMillToMain, ExitCategories.ForestExterior, entryKongs={Kongs.tiny}, move=True),
    Exits.ForestTinyMillToMain: ShufflableExit("Fungi Forest Mill Tiny Entrance to Main", Regions.MillTinyArea, Exits.ForestMainToTinyMill, ExitCategories.ForestMill, entryKongs={Kongs.tiny}, regionKongs={Kongs.tiny}),
    Exits.ForestMainToGrinder: ShufflableExit("Fungi Forest Main to Grinder Room", Regions.MillArea, Exits.ForestGrinderToMain, ExitCategories.ForestExterior),
    Exits.ForestGrinderToMain: ShufflableExit("Fungi Forest Grinder Room to Main", Regions.GrinderRoom, Exits.ForestMainToGrinder, ExitCategories.ForestGrinder),
    Exits.ForestMainToRafters: ShufflableExit("Fungi Forest Main to Rafters", Regions.MillArea, Exits.ForestRaftersToMain, ExitCategories.ForestExterior, entryKongs={Kongs.diddy}, move=True),
    Exits.ForestRaftersToMain: ShufflableExit("Fungi Forest Rafters to Main", Regions.MillRafters, Exits.ForestMainToRafters, regionKongs={Kongs.diddy}),
    Exits.ForestMainToWinch: ShufflableExit("Fungi Forest Main to Winch Room", Regions.MillArea, Exits.ForestWinchToMain, ExitCategories.ForestExterior, entryKongs={Kongs.diddy}),
    Exits.ForestWinchToMain: ShufflableExit("Fungi Forest Winch Room to Main", Regions.WinchRoom, Exits.ForestMainToWinch, regionKongs={Kongs.diddy}),
    Exits.ForestMainToAttic: ShufflableExit("Fungi Forest Main to Mill Attic", Regions.MillArea, Exits.ForestAtticToMain, ExitCategories.ForestExterior),
    Exits.ForestAtticToMain: ShufflableExit("Fungi Forest Mill Attic to Main", Regions.MillAttic, Exits.ForestMainToAttic, regionKongs={Kongs.lanky}),
    Exits.ForestTinyMillToSpider: ShufflableExit("Fungi Forest Mill to Spider Boss", Regions.MillTinyArea, Exits.ForestSpiderToTinyMill, ExitCategories.ForestMill, regionKongs={Kongs.tiny}),
    Exits.ForestSpiderToTinyMill: ShufflableExit("Fungi Forest Spider Boss to Mill", Regions.SpiderRoom, Exits.ForestTinyMillToSpider, regionKongs={Kongs.tiny}),
    Exits.ForestTinyMillToGrinder: ShufflableExit("Fungi Forest Tiny Entrance to Grinder Room", Regions.MillTinyArea, Exits.ForestGrinderToTinyMill, ExitCategories.ForestMill, entryKongs={Kongs.tiny}, regionKongs={Kongs.tiny}, move=True),
    Exits.ForestGrinderToTinyMill: ShufflableExit("Fungi Forest Grinder Room to Tiny Entrance", Regions.GrinderRoom, Exits.ForestTinyMillToGrinder, ExitCategories.ForestGrinder, entryKongs={Kongs.tiny}, move=True),
    Exits.ForestMainToBarn: ShufflableExit("Fungi Forest Main to Thornvine Barn", Regions.ThornvineArea, Exits.ForestBarnToMain, ExitCategories.ForestExterior, entryKongs={Kongs.donkey}),
    Exits.ForestBarnToMain: ShufflableExit("Fungi Forest Thornvine Barn to Main", Regions.ThornvineBarn, Exits.ForestMainToBarn, regionKongs={Kongs.donkey}),
    # Crystal Caves Exits
    Exits.CavesMainToRace: ShufflableExit("Crystal Caves Main to Beetle Race", Regions.CrystalCavesMain, Exits.CavesRaceToMain, ExitCategories.CavesExterior, entryKongs={Kongs.lanky}, move=True),
    Exits.CavesRaceToMain: ShufflableExit("Crystal Caves Beetle Race to Main", Regions.CavesLankyRace, Exits.CavesMainToRace, regionKongs={Kongs.lanky}),
    Exits.CavesMainToCastle: ShufflableExit("Crystal Caves Main to Frozen Castle", Regions.CrystalCavesMain, Exits.CavesCastleToMain, ExitCategories.CavesExterior, entryKongs={Kongs.lanky}),
    Exits.CavesCastleToMain: ShufflableExit("Crystal Caves Frozen Castle to Main", Regions.FrozenCastle, Exits.CavesMainToCastle, regionKongs={Kongs.lanky}),
    Exits.CavesIglooToDonkey: ShufflableExit("Crystal Caves Main to Donkey 5DI", Regions.IglooArea, Exits.CavesDonkeyToIgloo, ExitCategories.CavesExterior, entryKongs={Kongs.donkey}, move=True),
    Exits.CavesDonkeyToIgloo: ShufflableExit("Crystal Caves Donkey 5DI to Main", Regions.DonkeyIgloo, Exits.CavesIglooToDonkey, regionKongs={Kongs.donkey}),
    Exits.CavesIglooToDiddy: ShufflableExit("Crystal Caves Main to Diddy 5DI", Regions.IglooArea, Exits.CavesDiddyToIgloo, ExitCategories.CavesExterior, entryKongs={Kongs.diddy}, move=True),
    Exits.CavesDiddyToIgloo: ShufflableExit("Crystal Caves Diddy 5DI to Main", Regions.DiddyIgloo, Exits.CavesIglooToDiddy, regionKongs={Kongs.diddy}),
    Exits.CavesIglooToLanky: ShufflableExit("Crystal Caves Main to Lanky 5DI", Regions.IglooArea, Exits.CavesLankyToIgloo, ExitCategories.CavesExterior, entryKongs={Kongs.lanky}, move=True),
    Exits.CavesLankyToIgloo: ShufflableExit("Crystal Caves Lanky 5DI to Main", Regions.LankyIgloo, Exits.CavesIglooToLanky, regionKongs={Kongs.lanky}),
    Exits.CavesIglooToTiny: ShufflableExit("Crystal Caves Main to Tiny 5DI", Regions.IglooArea, Exits.CavesTinyToIgloo, ExitCategories.CavesExterior, entryKongs={Kongs.tiny}, move=True),
    Exits.CavesTinyToIgloo: ShufflableExit("Crystal Caves Tiny 5DI to Main", Regions.TinyIgloo, Exits.CavesIglooToTiny, regionKongs={Kongs.tiny}),
    Exits.CavesIglooToChunky: ShufflableExit("Crystal Caves Main to Chunky 5DI", Regions.IglooArea, Exits.CavesChunkyToIgloo, ExitCategories.CavesExterior, entryKongs={Kongs.chunky}, move=True),
    Exits.CavesChunkyToIgloo: ShufflableExit("Crystal Caves Chunky 5DI to Main", Regions.ChunkyIgloo, Exits.CavesIglooToChunky, regionKongs={Kongs.chunky}),
    Exits.CavesCabinToRotating: ShufflableExit("Crystal Caves Main to Rotating Cabin", Regions.CabinArea, Exits.CavesRotatingToCabin, ExitCategories.CavesExterior, entryKongs={Kongs.donkey}, move=True),
    Exits.CavesRotatingToCabin: ShufflableExit("Crystal Caves Rotating Cabin to Main", Regions.RotatingCabin, Exits.CavesCabinToRotating, regionKongs={Kongs.donkey}),
    Exits.CavesCabinToDonkey: ShufflableExit("Crystal Caves Main to Donkey 5DC", Regions.CabinArea, Exits.CavesDonkeyToCabin, ExitCategories.CavesExterior, entryKongs={Kongs.donkey}, move=True),
    Exits.CavesDonkeyToCabin: ShufflableExit("Crystal Caves Donkey 5DC to Main", Regions.DonkeyCabin, Exits.CavesCabinToDonkey, regionKongs={Kongs.donkey}),
    Exits.CavesCabinToDiddyLower: ShufflableExit("Crystal Caves Main to Diddy Lower 5DC", Regions.CabinArea, Exits.CavesDiddyLowerToCabin, ExitCategories.CavesExterior, entryKongs={Kongs.diddy}, move=True),
    Exits.CavesDiddyLowerToCabin: ShufflableExit("Crystal Caves Diddy Lower 5DC to Main", Regions.DiddyLowerCabin, Exits.CavesCabinToDiddyLower, regionKongs={Kongs.diddy}),
    Exits.CavesCabinToDiddyUpper: ShufflableExit("Crystal Caves Main to Diddy Upper 5DC", Regions.CabinArea, Exits.CavesDiddyUpperToCabin, ExitCategories.CavesExterior, entryKongs={Kongs.diddy}, move=True),
    Exits.CavesDiddyUpperToCabin: ShufflableExit("Crystal Caves Diddy Upper 5DC to Main", Regions.DiddyUpperCabin, Exits.CavesCabinToDiddyUpper, regionKongs={Kongs.diddy}),
    Exits.CavesCabinToLanky: ShufflableExit("Crystal Caves Main to Lanky 1DC", Regions.CabinArea, Exits.CavesLankyToCabin, ExitCategories.CavesExterior, entryKongs={Kongs.lanky}, move=True),
    Exits.CavesLankyToCabin: ShufflableExit("Crystal Caves Lanky 1DC to Main", Regions.LankyCabin, Exits.CavesCabinToLanky, regionKongs={Kongs.lanky}),
    Exits.CavesCabinToTiny: ShufflableExit("Crystal Caves Main to Tiny 5DC", Regions.CabinArea, Exits.CavesTinyToCabin, ExitCategories.CavesExterior, entryKongs={Kongs.tiny}, move=True),
    Exits.CavesTinyToCabin: ShufflableExit("Crystal Caves Tiny 5DC to Main", Regions.TinyCabin, Exits.CavesCabinToTiny, regionKongs={Kongs.tiny}),
    Exits.CavesCabinToChunky: ShufflableExit("Crystal Caves Main to Chunky 5DC", Regions.CabinArea, Exits.CavesChunkyToCabin, ExitCategories.CavesExterior, entryKongs={Kongs.chunky}, move=True),
    Exits.CavesChunkyToCabin: ShufflableExit("Crystal Caves Chunky 5DC to Main", Regions.ChunkyCabin, Exits.CavesCabinToChunky, regionKongs={Kongs.chunky}),
    # Creepy Castle Exits
    Exits.CastleMainToTree: ShufflableExit("Creepy Castle Main to Tree", Regions.CreepyCastleMain, Exits.CastleTreeToMain, ExitCategories.CastleExterior),
    Exits.CastleTreeToMain: ShufflableExit("Creepy Castle Tree to Main", Regions.CastleTree, Exits.CastleMainToTree, regionKongs={Kongs.donkey, Kongs.chunky}),
    # At some point add tree drain pipe
    Exits.CastleMainToLibrary: ShufflableExit("Creepy Castle Main to Library", Regions.CreepyCastleMain, Exits.CastleLibraryToMain, ExitCategories.CastleExterior, entryKongs={Kongs.donkey}),
    Exits.CastleLibraryToMain: ShufflableExit("Creepy Castle Library to Main", Regions.Library, Exits.CastleMainToLibrary, regionKongs={Kongs.donkey}),
    # At some point add library back door
    Exits.CastleMainToBallroom: ShufflableExit("Creepy Castle Main to Ballroom", Regions.CreepyCastleMain, Exits.CastleBallroomToMain, ExitCategories.CastleExterior),
    Exits.CastleBallroomToMain: ShufflableExit("Creepy Castle Ballroom to Main", Regions.Ballroom, Exits.CastleMainToBallroom, ExitCategories.CastleBallroom),
    Exits.CastleMainToTower: ShufflableExit("Creepy Castle Main to Tower", Regions.CreepyCastleMain, Exits.CastleTowerToMain, ExitCategories.CastleExterior, entryKongs={Kongs.lanky}),
    Exits.CastleTowerToMain: ShufflableExit("Creepy Castle Tower to Main", Regions.Tower, Exits.CastleMainToTower, regionKongs={Kongs.lanky}),
    Exits.CastleMainToGreenhouse: ShufflableExit("Creepy Castle Main to Greenhouse", Regions.CreepyCastleMain, Exits.CastleGreenhouseToMain, ExitCategories.CastleExterior, entryKongs={Kongs.lanky}),
    Exits.CastleGreenhouseToMain: ShufflableExit("Creepy Castle Greenhouse to Main", Regions.Greenhouse, Exits.CastleMainToGreenhouse, regionKongs={Kongs.lanky}),
    # At some point add one to differentiate greenhouse back door/front door
    Exits.CastleMainToTrash: ShufflableExit("Creepy Castle Main to Trash Can", Regions.CreepyCastleMain, Exits.CastleTrashToMain, ExitCategories.CastleExterior, entryKongs={Kongs.tiny}, move=True),
    Exits.CastleTrashToMain: ShufflableExit("Creepy Castle Trash Can to Main", Regions.TrashCan, Exits.CastleMainToTrash, regionKongs={Kongs.tiny}),
    Exits.CastleMainToShed: ShufflableExit("Creepy Castle Main to Shed", Regions.CreepyCastleMain, Exits.CastleShedToMain, ExitCategories.CastleExterior, entryKongs={Kongs.chunky}, move=True),
    Exits.CastleShedToMain: ShufflableExit("Creepy Castle Shed to Main", Regions.Shed, Exits.CastleMainToShed, regionKongs={Kongs.chunky}),
    Exits.CastleMainToMuseum: ShufflableExit("Creepy Castle Main to Museum", Regions.CreepyCastleMain, Exits.CastleMuseumToMain, ExitCategories.CastleExterior, entryKongs={Kongs.chunky}),
    Exits.CastleMuseumToMain: ShufflableExit("Creepy Castle Museum to Main", Regions.Museum, Exits.CastleMainToMuseum, regionKongs={Kongs.chunky}),
    Exits.CastleMainToLower: ShufflableExit("Creepy Castle Main to Lower Cave", Regions.CreepyCastleMain, Exits.CastleLowerToMain, ExitCategories.CastleExterior),
    Exits.CastleLowerToMain: ShufflableExit("Creepy Castle Lower Cave to Main", Regions.LowerCave, Exits.CastleMainToLower, ExitCategories.CastleLower),
    Exits.CastleMainToUpper: ShufflableExit("Creepy Castle Main to Upper Cave", Regions.CreepyCastleMain, Exits.CastleUpperToMain, ExitCategories.CastleExterior),
    Exits.CastleUpperToMain: ShufflableExit("Creepy Castle Upper Cave to Main", Regions.UpperCave, Exits.CastleMainToUpper, ExitCategories.CastleUpper),
    Exits.CastleWaterfallToUpper: ShufflableExit("Creepy Castle Waterfall to Upper Cave", Regions.CastleWaterfall, Exits.CastleUpperToWaterfall, ExitCategories.CastleExterior),
    Exits.CastleUpperToWaterfall: ShufflableExit("Creepy Castle Upper Cave to Waterfall", Regions.UpperCave, Exits.CastleWaterfallToUpper, ExitCategories.CastleUpper),
    Exits.CastleBallroomToRace: ShufflableExit("Creepy Castle Ballroom to Car Race", Regions.Ballroom, Exits.CastleRaceToBallroom, ExitCategories.CastleBallroom, entryKongs={Kongs.tiny}),
    Exits.CastleRaceToBallroom: ShufflableExit("Creepy Castle Car Race to Ballroom", Regions.CastleTinyRace, Exits.CastleBallroomToRace, regionKongs={Kongs.tiny}),
    Exits.CastleLowerToCrypt: ShufflableExit("Creepy Castle Lower Cave to Crypt", Regions.LowerCave, Exits.CastleCryptToLower, ExitCategories.CastleLower, entryKongs={Kongs.donkey, Kongs.diddy, Kongs.chunky}),
    Exits.CastleCryptToLower: ShufflableExit("Creepy Castle Crypt to Lower Cave", Regions.Crypt, Exits.CastleLowerToCrypt, ExitCategories.CastleCrypt, regionKongs={Kongs.donkey, Kongs.diddy, Kongs.chunky}),
    Exits.CastleLowerToMausoleum: ShufflableExit("Creepy Castle Lower Cave to Mausoleum", Regions.LowerCave, Exits.CastleMausoleumToLower, ExitCategories.CastleLower, entryKongs={Kongs.lanky, Kongs.tiny}),
    Exits.CastleMausoleumToLower: ShufflableExit("Creepy Castle Mausoleum to Lower cave", Regions.Mausoleum, Exits.CastleLowerToMausoleum, regionKongs={Kongs.lanky, Kongs.tiny}),
    Exits.CastleCryptToCarts: ShufflableExit("Creepy Castle Crypt to Minecarts", Regions.Crypt, Exits.CastleCartsToCrypt, ExitCategories.CastleCrypt, entryKongs={Kongs.donkey}),
    Exits.CastleCartsToCrypt: ShufflableExit("Creepy Castle Minecarts to Crypt", Regions.CastleMinecarts, Exits.CastleCryptToCarts, regionKongs={Kongs.donkey}),
    Exits.CastleUpperToDungeon: ShufflableExit("Creepy Castle Upper Cave to Dungeon", Regions.UpperCave, Exits.CastleDungeonToUpper, ExitCategories.CastleUpper),
    Exits.CastleDungeonToUpper: ShufflableExit("Creepy Castle Dungeon to Upper Cave", Regions.Dungeon, Exits.CastleUpperToDungeon),
}
