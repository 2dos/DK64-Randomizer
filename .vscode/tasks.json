{
  // See https://go.microsoft.com/fwlink/?LinkId=733558
  // for the documentation about the tasks.json format
  "version": "2.0.0",
  "tasks": [
    {
      "label": "Install requirements",
      "type": "shell",
      "command": "${command:python.interpreterPath} -m pip install -r ${workspaceFolder}/requirements-dev.txt",
      "problemMatcher": []
    },
    {
      "label": "Format Repo",
      "type": "shell",
      "command": "${command:python.interpreterPath} -m black -l 200 ${workspaceFolder}",
      "problemMatcher": []
    },
    {
      "label": "Validate Styles",
      "type": "shell",
      "command": "${command:python.interpreterPath} -m pycodestyle --ignore E501,W605,W503,E203 ${workspaceFolder}",
      "problemMatcher": []
    },
    {
      "label": "Validate Docstrings",
      "type": "shell",
      "command": "${command:python.interpreterPath} -m pydocstyle ${workspaceFolder}",
      "problemMatcher": []
    },
    {
      "label": "Validate Jinja2",
      "type": "shell",
      "command": "${command:python.interpreterPath} -m djlint ./templates/* --profile=jinja --reformat --format-css --format-js",
      "problemMatcher": []
    },
    {
      "label": "Validate C",
      "type": "shell",
      "command": "Get-ChildItem -Path \"./base-hack/src\" -Recurse -Filter *.c |\nForeach-Object {\n${command:python.interpreterPath} -m cpplint --quiet --filter=-whitespace,-legal/copyright,-readability/casting,-runtime/int,-readability/fn_size $_.FullName\n}",
      "problemMatcher": []
    },
    {
      "label": "Lint Repo",
      "dependsOn": ["Format Repo", "Validate Styles", "Validate Docstrings", "Validate Jinja2", "Validate C"],
      "problemMatcher": [],
    },
    {
      "label": "Run Tests",
      "type": "shell",
      "command": "${command:python.interpreterPath} -m pytest -v --cov=${workspaceFolder}/ --cov-report html ${workspaceFolder}/tests",
      "problemMatcher": [],
    },
    {
      "label": "Build BPS",
      "type": "shell",
      "command": "cd ${workspaceFolder}/base-hack/ ; ./build.bat",
      "problemMatcher": [],
      "group": {
        "kind": "build",
        "isDefault": true
      }
    },
    {
      "label": "Run Server",
      "type": "shell",
      "command": "${command:python.interpreterPath} ./NoCacheHTTPServer.py",
      "problemMatcher": [],
    },
  ]
}
