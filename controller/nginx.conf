load_module modules/ngx_otel_module.so;

events {}
http {

    otel_exporter {
        endpoint host.docker.internal:4317;
    }
    otel_service_name nginx;
    otel_trace on;
    upstream controller {
        # Replace 'controller' with the service name as Docker Compose resolves this automatically.
        server controller:8000;
    }
    upstream signoz {
        # Replace 'signoz' with the service name as Docker Compose resolves this automatically.
        server host.docker.internal:3301;
    }
    server {
        listen 80;
        server_name _;

        # Redirect all HTTP requests to HTTPS.
        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl;
        server_name signoz.dk64rando.com;
        ssl_certificate /etc/nginx/certificate.crt;
        ssl_certificate_key /etc/nginx/private.key;

        # Proxy requests to the signoz service.
        location / {
            proxy_pass http://signoz;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            otel_span_attr deployment.environment "main";
        }
    }

    server {
        listen 443 ssl;
        server_name api.dk64rando.com;
        ssl_certificate /etc/nginx/certificate.crt;
        ssl_certificate_key /etc/nginx/private.key;

        # Proxy requests to the controller replicas.
        location /api/ {
            proxy_pass http://controller;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            otel_span_attr deployment.environment "main";
        }

        # Serve static content or fallback.
        location / {
            return 404;
        }
    }
}
